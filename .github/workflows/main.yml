name: IoT Dashboard CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Frontend - Install Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Frontend - Run Tests
      working-directory: ./frontend
      run: npm test -- --passWithNoTests

    - name: Backend - Install Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Backend - Run Tests
      working-directory: ./backend
      run: npm test -- --passWithNoTests

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_WS_URL: ${{ secrets.REACT_APP_WS_URL }}

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Railway
      uses: bervProject/railway-deploy@main
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: "iot-dashboard-backend"
        directory: "./backend"
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        MQTT_BROKER_URL: ${{ secrets.MQTT_BROKER_URL }}
        CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}

  security:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
